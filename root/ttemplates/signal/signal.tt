<div>
<textarea id="txtsignal"></textarea>
<button id="getsignal">Test</button>
</div>


<div id="json"></div>
<script>
YAHOO.util.Event.addListener(window, "load", function() {
    YAHOO.example.XHR_JSON = new function() {

        this.formatUrl = function(elCell, oRecord, oColumn, sData) {
	        elCell.innerHTML = "<a href='/" + oRecord.getData("symbol") + "/'>" + sData + "</a>";
	    };

        var myColumnDefs = [
            {key:"symbol", label:"Symbol", sortable:true, formatter:this.formatUrl},
            {key:"item1", label:"Indicator", sortable:true}
        ];

        this.myDataSource = new YAHOO.util.DataSource("/signal/parse?");
        this.myDataSource.responseType = YAHOO.util.DataSource.TYPE_JSON;
        this.myDataSource.connXhrMode = "queueRequests";
        this.myDataSource.responseSchema = {
            resultsList: "ResultSet.Result",
            fields: [   {key: "symbol", parser:"string"},
                        {key: "item0",  parser:"string"},
                        {key: "item1",  parser:"number"}
                    ]
        };

        this.myDataTable = new YAHOO.widget.DataTable("json", myColumnDefs,
        this.myDataSource, {initialRequest:"t=week&e=trend(close,21)"});
    };

    var updateSignals = function() {
        var txt = YAHOO.util.Dom.get('txtsignal');
        var ds = YAHOO.example.XHR_JSON.myDataSource;
        var dt = YAHOO.example.XHR_JSON.myDataTable;

        var myCallback = function() {
            this.set("sortedBy", null);
            this.onDataReturnInitializeTable.apply(this,arguments);
        };
        var callback1 = {
            success : myCallback,
            failure : myCallback,
            scope : dt
        };
        ds.sendRequest("t=week&e=" + txt.value, callback1);
    }

	YAHOO.util.Event.addListener("getsignal", "click", updateSignals);
});

</script>
